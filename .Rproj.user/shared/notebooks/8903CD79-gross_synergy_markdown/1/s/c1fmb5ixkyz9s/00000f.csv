"0","# Compute the difference for the group of countries."
"0","indicator_gradient_group <- evaluate_grads_group_fun(sdg_indicator_selected_clean)"
"0",""
"0","# Table 1"
"0","# Read the goal direction of the SDG indicators."
"0","true_direction_df <- read.csv(""partial_true_direction_un.csv"")"
"0","true_direction_df <- true_direction_df %>% filter(included == 1)"
"0","true_direction_df_copy <- true_direction_df %>% filter(tolower(indicator) %in% indicators_econ_envir_names)"
"0","true_direction_df_copy <- true_direction_df_copy[order(true_direction_df_copy$indicator),]"
"0",""
"0","# Create a data-frame indicating the direction (+1 or -1) of SDG indicators."
"0","target_indicator_df <- data.frame()"
"0",""
"0","# Populate the dataframe with indicator directions"
"0","for(i in 1:nrow(true_direction_df_copy)) {"
"0","  target_indicator_df <- rbind(target_indicator_df, rep(true_direction_df_copy$direction[i], length(YEAR_SEQUENCE[-1])))"
"0","}"
"0",""
"0","# Format the dataframe"
"0","target_indicator_df <- data.frame(t(target_indicator_df))"
"0","colnames(target_indicator_df) <- colnames(indicator_gradient_group)"
"0","rownames(target_indicator_df) <- as.Date(ISOdate(YEAR_SEQUENCE[-1], 1, 1))  # beginning of year"
"0","target_indicator_df$year <- as.Date(ISOdate(YEAR_SEQUENCE[-1], 1, 1))  # beginning of year"
"0",""
"0","# Filter dataframe for relevant years"
"0","target_indicator_df <- target_indicator_df %>% filter(year <= ""2020-01-01"" & year >= ""2000-01-01"")"
"0","target_indicator_df$year <- NULL"
"0",""
"0","# Equation 10"
"0","# Compute the direction of synergy between indicator gradient and target indicator direction"
"0","synergy_direction_df <- indicator_gradient_group * target_indicator_df"
"0",""
"0","# Set NA values where synergy cannot be computed"
"0","synergy_direction_df[is.na(synergy_direction_df)] <- NA"
